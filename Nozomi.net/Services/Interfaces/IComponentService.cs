// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Nozomi.net
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// ComponentService operations.
    /// </summary>
    public partial interface IComponentService
    {
        /// <summary>
        /// Obtain all components you have created.
        /// </summary>
        /// <param name='requestGuid'>
        /// The unique identifier of the request that contains this component.
        /// </param>
        /// <param name='index'>
        /// The 'page' of the list of results in 100s
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<object>> All(string requestGuid, int? index = 0, 
            CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create a component.
        /// </summary>
        /// <param name='body'>
        /// The supposed properties/parameters of the component.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<string>> CreateAsync(CreateComponentInputModel body = 
            default(CreateComponentInputModel), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete a component.
        /// </summary>
        /// <param name='guid'>
        /// The unique identifier of the component to delete.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<string>> DeleteAsync(string guid = default(string),
            CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Obtain the component and its historical values.
        /// </summary>
        /// <param name='guid'>
        /// The unique identifier of the component.
        /// </param>
        /// <param name='index'>
        /// The 'page' of the list of historical values in 100s
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<object>> GetAsync(string guid, int? index = 0, 
            CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update a component.
        /// </summary>
        /// <param name='body'>
        /// The supposed properties/parameters of the component.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<string>> UpdateAsync(UpdateComponentInputModel body = 
            default(UpdateComponentInputModel), CancellationToken cancellationToken = default(CancellationToken));
    }
}
