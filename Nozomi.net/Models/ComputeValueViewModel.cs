// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Nozomi.net.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ComputeValueViewModel
    {
        /// <summary>
        /// Initializes a new instance of the ComputeValueViewModel class.
        /// </summary>
        public ComputeValueViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComputeValueViewModel class.
        /// </summary>
        public ComputeValueViewModel(System.Guid? guid = default(System.Guid?), string value = default(string), System.Guid? computeGuid = default(System.Guid?), ComputeViewModel compute = default(ComputeViewModel), bool? isEnabled = default(bool?), System.DateTime? createdAt = default(System.DateTime?))
        {
            Guid = guid;
            Value = value;
            ComputeGuid = computeGuid;
            Compute = compute;
            IsEnabled = isEnabled;
            CreatedAt = createdAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "guid")]
        public System.Guid? Guid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "computeGuid")]
        public System.Guid? ComputeGuid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "compute")]
        public ComputeViewModel Compute { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isEnabled")]
        public bool? IsEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public System.DateTime? CreatedAt { get; set; }

    }
}
