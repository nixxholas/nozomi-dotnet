// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Nozomi.net.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ComponentTypeViewModel
    {
        /// <summary>
        /// Initializes a new instance of the ComponentTypeViewModel class.
        /// </summary>
        public ComponentTypeViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComponentTypeViewModel class.
        /// </summary>
        public ComponentTypeViewModel(long? id = default(long?), string slug = default(string), string name = 
            default(string), string description = default(string), bool? isEnabled = default(bool?), 
            IList<ComponentViewModel> components = default(IList<ComponentViewModel>))
        {
            Id = id;
            Slug = slug;
            Name = name;
            Description = description;
            IsEnabled = isEnabled;
            Components = components;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slug")]
        public string Slug { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isEnabled")]
        public bool? IsEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "components")]
        public IList<ComponentViewModel> Components { get; set; }

    }
}
