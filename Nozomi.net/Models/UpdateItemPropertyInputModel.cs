// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Nozomi.net.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UpdateItemPropertyInputModel
    {
        /// <summary>
        /// Initializes a new instance of the UpdateItemPropertyInputModel
        /// class.
        /// </summary>
        public UpdateItemPropertyInputModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateItemPropertyInputModel
        /// class.
        /// </summary>
        public UpdateItemPropertyInputModel(System.Guid? guid = default(System.Guid?), bool? isEnabled = default(bool?), string name = default(string), string value = default(string), bool? isDeleted = default(bool?), bool? permanentDeletion = default(bool?))
        {
            Guid = guid;
            IsEnabled = isEnabled;
            Name = name;
            Value = value;
            IsDeleted = isDeleted;
            PermanentDeletion = permanentDeletion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "guid")]
        public System.Guid? Guid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isEnabled")]
        public bool? IsEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isDeleted")]
        public bool? IsDeleted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "permanentDeletion")]
        public bool? PermanentDeletion { get; set; }

    }
}
