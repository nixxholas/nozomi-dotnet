// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Nozomi.net.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ComputeExpressionViewModel
    {
        /// <summary>
        /// Initializes a new instance of the ComputeExpressionViewModel class.
        /// </summary>
        public ComputeExpressionViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComputeExpressionViewModel class.
        /// </summary>
        public ComputeExpressionViewModel(System.Guid? guid = default(System.Guid?), int? type = default(int?), string expression = default(string), string value = default(string), System.Guid? computeGuid = default(System.Guid?), ComputeViewModel compute = default(ComputeViewModel), bool? isEnabled = default(bool?))
        {
            Guid = guid;
            Type = type;
            Expression = expression;
            Value = value;
            ComputeGuid = computeGuid;
            Compute = compute;
            IsEnabled = isEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "guid")]
        public System.Guid? Guid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public int? Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expression")]
        public string Expression { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "computeGuid")]
        public System.Guid? ComputeGuid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "compute")]
        public ComputeViewModel Compute { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isEnabled")]
        public bool? IsEnabled { get; set; }

    }
}
